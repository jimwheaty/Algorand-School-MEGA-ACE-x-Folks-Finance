{
    "hints": {
        "opt_in_borrower()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "opt_in_nft(asset)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "request_loan(uint64,uint64,uint64,uint64,axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete_request()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "repay_loan(axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "accept_loan(axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "liquidate_loan(asset,account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 7
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "amount": {
                    "type": "uint64",
                    "key": "amount",
                    "descr": "Amount of tokens requested to borrow"
                },
                "borrower": {
                    "type": "bytes",
                    "key": "borrower",
                    "descr": "ID of the borrower"
                },
                "duration": {
                    "type": "uint64",
                    "key": "duration",
                    "descr": "How much time the borrower needs the loan for"
                },
                "end": {
                    "type": "uint64",
                    "key": "end",
                    "descr": "Timestamp that the loan is ended"
                },
                "interest": {
                    "type": "uint64",
                    "key": "interest",
                    "descr": "Amount of interest the borrower asks for"
                },
                "lender": {
                    "type": "bytes",
                    "key": "lender",
                    "descr": "ID of the lender"
                },
                "nft": {
                    "type": "uint64",
                    "key": "nft",
                    "descr": "ID of the NFT"
                },
                "start": {
                    "type": "uint64",
                    "key": "start",
                    "descr": "Timestamp that the loan started"
                },
                "token": {
                    "type": "uint64",
                    "key": "token",
                    "descr": "ID of the token requested to borrow"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "NFTasCollateral",
        "methods": [
            {
                "name": "opt_in_borrower",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "opt_in_nft",
                "args": [
                    {
                        "type": "asset",
                        "name": "nft"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "request_loan",
                "args": [
                    {
                        "type": "uint64",
                        "name": "token"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "uint64",
                        "name": "duration"
                    },
                    {
                        "type": "uint64",
                        "name": "interest"
                    },
                    {
                        "type": "axfer",
                        "name": "axfer"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete_request",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "repay_loan",
                "args": [
                    {
                        "type": "axfer",
                        "name": "loan"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "accept_loan",
                "args": [
                    {
                        "type": "axfer",
                        "name": "loan"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "liquidate_loan",
                "args": [
                    {
                        "type": "asset",
                        "name": "nft"
                    },
                    {
                        "type": "account",
                        "name": "close_to_account"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}